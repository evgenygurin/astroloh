[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["app"]

[project]
name = "astroloh"
version = "1.0.0"
description = "Навык Астролог для Яндекс Алисы"
authors = [{name = "evgenygurin", email = "evgenygurin@users.noreply.github.com"}]
license = "MIT"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    # FastAPI и веб-сервер
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "pydantic==2.5.0",
    "pydantic-settings==2.1.0",
    # База данных
    "sqlalchemy==2.0.23",
    "alembic==1.13.1",
    "asyncpg==0.29.0",
    "psycopg2-binary==2.9.9",
    "aiosqlite==0.19.0",
    # Шифрование и безопасность
    "cryptography==42.0.8",
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    # HTTP клиенты
    "httpx==0.25.2",
    "aiohttp==3.9.5",
    # Обработка данных
    "python-dateutil==2.8.2",
    "pytz==2023.3",
    # Логирование и мониторинг
    "loguru==0.7.2",
    # Переменные окружения
    "python-dotenv==1.0.0",
    "swisseph>=0.0.0.dev1",
]

[project.optional-dependencies]
# Полный набор астрологических библиотек (рекомендуется для Linux/Windows)
full = [
    "pyswisseph==2.10.3.2",
    "skyfield==1.49",
    "astropy==6.0.0"
]

# Альтернативы для macOS (без компиляции C)
macos = [
    "skyfield==1.49",
    "astropy==6.0.0"
]

# Минимальный набор (только основные функции)
minimal = [
    "skyfield==1.49"
]

# Профессиональная астрономия (высокая точность)
professional = [
    "astropy==6.0.0",
    "skyfield==1.49"
]

# Разработка и тестирование
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "pytest-xdist==3.5.0",
    "black==23.11.0",
    "isort==5.12.0",
    "flake8==6.1.0",
    "mypy==1.7.1",
    "bandit==1.7.5",
    "safety>=3.0.0"
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "-ra",
    "--tb=short",
    "--maxfail=10"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests", 
    "unit: marks tests as unit tests",
    "security: marks tests as security-related"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning"
]
minversion = "7.0"
