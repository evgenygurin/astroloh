services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    networks:
      - astroloh-network

  # Backend service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://astroloh_user:astroloh_password@db:5432/astroloh_db
    depends_on:
      - db
    volumes:
      - ./app:/app/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - astroloh-network

  # Database service
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: astroloh_user
      POSTGRES_PASSWORD: astroloh_password
      POSTGRES_DB: astroloh_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - astroloh-network

  # Ngrok tunnel for backend
  ngrok-backend:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "http"
      - "backend:8000"
    ports:
      - 4040:4040  # Ngrok web interface for backend
    depends_on:
      - backend
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    networks:
      - astroloh-network

  # Ngrok tunnel for frontend
  ngrok-frontend:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "http"
      - "frontend:80"
    ports:
      - 4041:4040  # Ngrok web interface for frontend
    depends_on:
      - frontend
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    networks:
      - astroloh-network

volumes:
  postgres_data:

networks:
  astroloh-network:
    driver: bridge